{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\10 sem\\\\aptitudearc\\\\frontend\\\\src\\\\components\\\\ItemPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemPage = () => {\n  _s();\n  const {\n    categoryId,\n    itemId\n  } = useParams();\n\n  // Logic to fetch or determine the content based on categoryId and itemId\n  // For example, you might have a data structure mapping IDs to content\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Item Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Category ID: \", categoryId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Item ID: \", itemId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemPage, \"U9z3T+17RPCwBjbv6pMTmkdaUBI=\", false, function () {\n  return [useParams];\n});\n_c = ItemPage;\nexport default ItemPage;\nvar _c;\n$RefreshReg$(_c, \"ItemPage\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","ItemPage","_s","categoryId","itemId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Projects/10 sem/aptitudearc/frontend/src/components/ItemPage.js"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ItemPage = () => {\r\n  const { categoryId, itemId } = useParams();\r\n\r\n  // Logic to fetch or determine the content based on categoryId and itemId\r\n  // For example, you might have a data structure mapping IDs to content\r\n\r\n  return (\r\n    <div className=\"item-page\">\r\n      <h1>Item Details</h1>\r\n      <p>Category ID: {categoryId}</p>\r\n      <p>Item ID: {itemId}</p>\r\n      {/* Render the item details here */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,UAAU;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC;;EAE1C;EACA;;EAEA,oBACEE,OAAA;IAAKK,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBN,OAAA;MAAAM,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBV,OAAA;MAAAM,QAAA,GAAG,eAAa,EAACH,UAAU;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCV,OAAA;MAAAM,QAAA,GAAG,WAAS,EAACF,MAAM;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErB,CAAC;AAEV,CAAC;AAACR,EAAA,CAdID,QAAQ;EAAA,QACmBH,SAAS;AAAA;AAAAa,EAAA,GADpCV,QAAQ;AAgBd,eAAeA,QAAQ;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}