{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\AptitudeArc\\\\frontend\\\\src\\\\auth\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  userRole: null,\n  setUserRole: () => {}\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [userRole, setUserRole] = useState(null);\n  useEffect(() => {\n    // Load any existing token/role on initial render\n    const token = localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\");\n    const role = localStorage.getItem(\"role\") || sessionStorage.getItem(\"role\");\n    if (token && role) {\n      setUserRole(role);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      userRole,\n      setUserRole\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"vPp0yqj+hRw1UlF3QGOL0H6Z92E=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","userRole","setUserRole","AuthProvider","children","_s","token","localStorage","getItem","sessionStorage","role","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Projects/AptitudeArc/frontend/src/auth/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  userRole: null,\r\n  setUserRole: () => {},\r\n});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [userRole, setUserRole] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Load any existing token/role on initial render\r\n    const token = localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\");\r\n    const role = localStorage.getItem(\"role\") || sessionStorage.getItem(\"role\");\r\n    if (token && role) {\r\n      setUserRole(role);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ userRole, setUserRole }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC;EACvCM,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAEA,CAAA,KAAM,CAAC;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACJ,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,OAAO,CAAC;IAC9E,MAAME,IAAI,GAAGH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,MAAM,CAAC;IAC3E,IAAIF,KAAK,IAAII,IAAI,EAAE;MACjBR,WAAW,CAACQ,IAAI,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEX,QAAQ;MAAEC;IAAY,CAAE;IAAAE,QAAA,EACpDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACX,EAAA,CAjBWF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}