{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\AptitudeArc\\\\frontend\\\\src\\\\auth\\\\ForgotPasswordPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Container, TextField, Button, Typography, Paper, Alert, Box } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPasswordPage = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [otpSent, setOtpSent] = useState(false);\n  const [otpVerified, setOtpVerified] = useState(false);\n\n  // Send OTP\n  const handleSendOtp = async () => {\n    setMessage(\"\");\n    setError(\"\");\n    try {\n      const response = await axios.post(`http://localhost:8080/auth/forgot-password?email=${email}`);\n      setMessage(response.data.message);\n      setOtpSent(true);\n    } catch (err) {\n      setError(\"Email not registered. Please try again.\");\n    }\n  };\n\n  // Verify OTP\n  const handleVerifyOtp = async () => {\n    setMessage(\"\");\n    setError(\"\");\n    try {\n      const response = await axios.post(`http://localhost:8080/auth/verify-otp?email=${email}&otp=${otp}`);\n      if (response.data.message === \"OTP Verified\") {\n        setOtpVerified(true);\n        setMessage(\"OTP Verified. You can now reset your password.\");\n      } else {\n        setError(\"Invalid OTP. Please try again.\");\n      }\n    } catch (err) {\n      setError(\"Error verifying OTP.\");\n    }\n  };\n\n  // Reset Password\n  const handleResetPassword = async () => {\n    setMessage(\"\");\n    setError(\"\");\n    try {\n      const response = await axios.post(`http://localhost:8080/auth/reset-password?email=${email}&otp=${otp}&newPassword=${newPassword}`);\n      setMessage(response.data.message);\n    } catch (err) {\n      setError(\"Failed to reset password.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4,\n        mt: 5,\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 2,\n          fontWeight: \"bold\"\n        },\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: \"2px solid #e65100\",\n          mb: 3,\n          width: \"50%\",\n          mx: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          mb: 2\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }, this), !otpSent ? /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Email\",\n        type: \"email\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this) : otpSent && !otpVerified ? /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Enter OTP\",\n        type: \"text\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"New Password\",\n        type: \"password\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), !otpSent ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        fullWidth: true,\n        sx: {\n          backgroundColor: \"#e65100\",\n          color: \"#fff\",\n          mt: 2,\n          py: 1.2,\n          fontSize: \"1rem\"\n        },\n        onClick: handleSendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this) : otpSent && !otpVerified ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        fullWidth: true,\n        sx: {\n          backgroundColor: \"#e65100\",\n          color: \"#fff\",\n          mt: 2,\n          py: 1.2,\n          fontSize: \"1rem\"\n        },\n        onClick: handleVerifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        fullWidth: true,\n        sx: {\n          backgroundColor: \"#e65100\",\n          color: \"#fff\",\n          mt: 2,\n          py: 1.2,\n          fontSize: \"1rem\"\n        },\n        onClick: handleResetPassword,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPasswordPage, \"9WLeFRysTlxG6h8TbBUmmUkIIAg=\");\n_c = ForgotPasswordPage;\nexport default ForgotPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"names":["React","useState","Container","TextField","Button","Typography","Paper","Alert","Box","axios","jsxDEV","_jsxDEV","ForgotPasswordPage","_s","email","setEmail","otp","setOtp","newPassword","setNewPassword","message","setMessage","error","setError","otpSent","setOtpSent","otpVerified","setOtpVerified","handleSendOtp","response","post","data","err","handleVerifyOtp","handleResetPassword","maxWidth","children","elevation","sx","p","mt","textAlign","variant","mb","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","borderBottom","width","mx","severity","fullWidth","label","type","margin","value","onChange","e","target","required","backgroundColor","color","py","fontSize","onClick","_c","$RefreshReg$"],"sources":["D:/Projects/AptitudeArc/frontend/src/auth/ForgotPasswordPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container, TextField, Button, Typography, Paper, Alert, Box } from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nconst ForgotPasswordPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [otpVerified, setOtpVerified] = useState(false);\r\n\r\n  // Send OTP\r\n  const handleSendOtp = async () => {\r\n    setMessage(\"\");\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:8080/auth/forgot-password?email=${email}`);\r\n      setMessage(response.data.message);\r\n      setOtpSent(true);\r\n    } catch (err) {\r\n      setError(\"Email not registered. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Verify OTP\r\n  const handleVerifyOtp = async () => {\r\n    setMessage(\"\");\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:8080/auth/verify-otp?email=${email}&otp=${otp}`);\r\n      if (response.data.message === \"OTP Verified\") {\r\n        setOtpVerified(true);\r\n        setMessage(\"OTP Verified. You can now reset your password.\");\r\n      } else {\r\n        setError(\"Invalid OTP. Please try again.\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error verifying OTP.\");\r\n    }\r\n  };\r\n\r\n  // Reset Password\r\n  const handleResetPassword = async () => {\r\n    setMessage(\"\");\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `http://localhost:8080/auth/reset-password?email=${email}&otp=${otp}&newPassword=${newPassword}`\r\n      );\r\n      setMessage(response.data.message);\r\n    } catch (err) {\r\n      setError(\"Failed to reset password.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Paper elevation={3} sx={{ p: 4, mt: 5, textAlign: \"center\" }}>\r\n        <Typography variant=\"h4\" sx={{ mb: 2, fontWeight: \"bold\" }}>Forgot Password</Typography>\r\n        <Box sx={{ borderBottom: \"2px solid #e65100\", mb: 3, width: \"50%\", mx: \"auto\" }}></Box>\r\n\r\n        {message && <Alert severity=\"success\" sx={{ mb: 2 }}>{message}</Alert>}\r\n        {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\r\n\r\n        {!otpSent ? (\r\n          <TextField\r\n            fullWidth\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        ) : otpSent && !otpVerified ? (\r\n          <TextField\r\n            fullWidth\r\n            label=\"Enter OTP\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n            required\r\n          />\r\n        ) : (\r\n          <TextField\r\n            fullWidth\r\n            label=\"New Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n          />\r\n        )}\r\n\r\n        {!otpSent ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            sx={{ backgroundColor: \"#e65100\", color: \"#fff\", mt: 2, py: 1.2, fontSize: \"1rem\" }}\r\n            onClick={handleSendOtp}\r\n          >\r\n            Send OTP\r\n          </Button>\r\n        ) : otpSent && !otpVerified ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            sx={{ backgroundColor: \"#e65100\", color: \"#fff\", mt: 2, py: 1.2, fontSize: \"1rem\" }}\r\n            onClick={handleVerifyOtp}\r\n          >\r\n            Verify OTP\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            sx={{ backgroundColor: \"#e65100\", color: \"#fff\", mt: 2, py: 1.2, fontSize: \"1rem\" }}\r\n            onClick={handleResetPassword}\r\n          >\r\n            Reset Password\r\n          </Button>\r\n        )}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}